import { IReportGeneratorStrategy } from "./interfaces/IReportGeneratorStrategy";
import { SprintResult } from "./sprintResults";

export class ReportLogger {
  private strategy: IReportGeneratorStrategy;

  constructor(strategy: IReportGeneratorStrategy) {
    this.strategy = strategy;
  }

  public setStrategy(strategy: IReportGeneratorStrategy): void {
    this.strategy = strategy;
  }

  public logSprintResults(sprintResults: SprintResult): void {
    const date = new Date();
    const author = sprintResults.getAuthor();
    const sprintStartDate = sprintResults.getSprintStartDate();
    const sprintEndDate = sprintResults.getSprintEndDate();
    const sprintDuration = sprintResults.getSprintDuration();
    const tasksCompleted = sprintResults.getTasksCompleted();
    const tasksRemaining = sprintResults.getTasksRemaining();
    const issuesFound = sprintResults.getIssuesFound();

    const header = `Sprint Results for ${sprintStartDate} to ${sprintEndDate}`;
    const footer = `Generated by ${author} at ${date}`;
    const content = `
      Sprint Summary:
        - Author: ${author}
        - Start Date: ${sprintStartDate}
        - End Date: ${sprintEndDate}
        - Duration: ${sprintDuration} days
        - Tasks Completed: ${tasksCompleted}
        - Tasks Remaining: ${tasksRemaining}
        - Issues Found: ${issuesFound}
    `;

    let generatedReport = this.strategy.generateReport(content);

    let result = `
      ${header} + \\r\\r
      ${generatedReport} + \\r\\r
      ${footer}
    `;

    console.log(result);
  }
}
